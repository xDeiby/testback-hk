{"version":3,"sources":["components/element.js","service/querys.js","components/newElement.js","components/list.js","App.js","reportWebVitals.js","index.js"],"names":["Element","data","deleteData","name","phone","onClick","id","API_URL","getPersons","a","axios","get","response","error","message","newPerson","body","post","status","statusText","deletePerson","delete","NewElement","setLoading","addElement","React","useState","element","setElement","saveElement","style","marginTop","for","type","onChange","target","value","List","persons","setPersons","loading","useEffect","result","getData","filter","person","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.862771ad.chunk.js","sourcesContent":["const Element = ({ data, deleteData }) => {\r\n  return (\r\n    <div>\r\n      <strong>name:</strong> {data.name} <strong>phone</strong> {data.phone}\r\n      <button onClick={() => deleteData(data.id)}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Element;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/persons\";\r\n\r\nconst getPersons = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return {\r\n      data: response.data,\r\n      error: null,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      data: [],\r\n      error: err.message,\r\n    };\r\n  }\r\n};\r\n\r\nconst newPerson = async (body) => {\r\n  try {\r\n    const response = await axios.post(API_URL, body);\r\n\r\n    return {\r\n      status: response.status,\r\n      message: response.statusText,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      status: 400,\r\n      message: err.message,\r\n    };\r\n  }\r\n};\r\n\r\nconst deletePerson = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`);\r\n\r\n  return {\r\n    status: response.status,\r\n    message: response.statusText,\r\n  };\r\n};\r\n\r\nexport { getPersons, newPerson, deletePerson };\r\n","import React from \"react\";\r\nimport { newPerson } from \"../service/querys\";\r\n\r\nconst NewElement = ({ setLoading, addElement }) => {\r\n  const [element, setElement] = React.useState({});\r\n\r\n  const saveElement = async () => {\r\n    setLoading(true);\r\n\r\n    const result = await newPerson(element);\r\n\r\n    result.status === 201 && addElement(element);\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <div>\r\n        <label for=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          onChange={({ target }) =>\r\n            setElement({ ...element, [target.name]: target.value })\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <label for=\"phone\">Phone</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          onChange={({ target }) =>\r\n            setElement({ ...element, [target.name]: target.value })\r\n          }\r\n        />\r\n      </div>\r\n      <button onClick={() => saveElement()}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewElement;\r\n","import React, { useEffect } from \"react\";\r\nimport Element from \"./element\";\r\nimport { deletePerson, getPersons } from \"../service/querys\";\r\nimport NewElement from \"./newElement\";\r\n\r\nconst List = () => {\r\n  const [persons, setPersons] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setLoading(true);\r\n      const result = await getPersons();\r\n\r\n      !result.error && setPersons(result.data);\r\n      setLoading(false);\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const deleteData = async (id) => {\r\n    setLoading(true);\r\n    const result = await deletePerson(id);\r\n\r\n    if (result.status === 204) {\r\n      setPersons(persons.filter((person) => person.id !== id));\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!loading ? (\r\n        persons.map((person) => (\r\n          <Element key={person.id} data={person} deleteData={deleteData} />\r\n        ))\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )}\r\n      <NewElement\r\n        setLoading={setLoading}\r\n        addElement={(person) => setPersons([...persons, person])}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import List from \"./components/list\";\n\nfunction App() {\n  return <List />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}